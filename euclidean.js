
// dataset team_resources
//features data
const x_train = [[ 50,  80,  70, 100,  90,   5,  60,  30,  40,  15,  10,  20],
       [ 60,   5,  10,  20,  90, 100,  70,  80,  50,  40,  30,  15],
       [ 70,  60,   5,  10, 100,  15,  90,  80,  50,  30,  40,  20],
       [ 80,  60,  90,  70,  40, 100,  30,  50,  20,  10,  15,   5],
       [  5,  60,  50,  70,  30,  40,  80,  20,  90,  15,  10, 100],
       [ 50, 100,  70,  60,  90,  30,  40,  80,  20,  10,  10,   5],
       [100,  80,  60,  70,  90,  50,  30,  20,  10,  15,  40,   5],
       [ 10,   5,  70,  80,  60,  50,  20,  40,  90,  30,  15, 100],
       [ 80, 100,  90,  70,  60,  50,  20,  30,  10,  15,  40,   5],
       [100,  80,  50,  20,  90,  70,  40,  60,  30,  15,   5,  10],
       [ 10,   5,  70,  60,  50,  80,  40,  30,  90,  20, 100,  15],
       [100,  80,  90,  60,  70,  40,  30,  20,  50,  15,  10,   5],
       [100,  90,   5,  80,  50,  10,  40,  70,  30,  60,  20,  15],
       [ 40,  30,   5,  20,  10,  15,  60,  90,  80, 100,  70,  50],
       [  5, 100,  10,  15,  20,  30,  40,  60,  70,  90,  80,  50],
       [ 90,  80,  60,  70,  40, 100,  50,  30,  10,  15,  20,   5],
       [ 30,   5,  10,  15,  40,  20,  70,  80, 100,  90,  60,  50],
       [  5,  15,  40,  30,  20,  10,  70,  80, 100,  90,  60,  50],
       [ 15,  30,  20,  10,   5,  40,  70,  80, 100,  90,  60,  50],
       [ 80,  60,  70,  90,  10,   5,  50,  15,  40, 100,  20,  30],
       [  5,  10, 100,  15,  20,  90,  30,  40,  80,  50,  60,  70],
       [ 90,  60,  10,  70,  15,  50,  20,   5,  40,  30,  80, 100],
       [100,  40,  90,  50,  80,  60,  70,  30,   5,  20,  10,  15],
       [  5,  10,  15,  20,  30,  40,  60,  70,  80, 100,  90,  50],
       [ 70,  30,  60,  40,  50,   5,  20,  10,  15,  90,  80, 100],
       [ 80,  70,  20,  60,  40,  30,  50,  15, 100,  90,  10,   5]]

// labels data
const y_train = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
       
        //mencari jarak euclidean
        function euclidianDistance(a,b){
            var distance = 0
            var n
            for(n=0; n<a.length; n++){
                distance += Math.pow(a[n]-b[n], 2);
            }
            return distance**0.5
        }
        // mendapatkan jarak dari point baru ke setiap data
        function getNeigh(train, test){
            const distance = []
            var n
            for(n=0; n<train.length; n++){
                const dist = euclidianDistance(test, train[n]);
                distance.push(dist);
            }
            rank_dist = distance.sort() 
            return rank_dist;
        }
        //menjalankan inputan
        async function run(){
            test = [20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            y_new = getNeigh(x_train, test)
            console.log(y_new)
        }
        run();